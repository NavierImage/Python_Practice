import sys
n, m = map(int, sys.stdin.readline().split())
chess = []
for i in range(n):
    t = sys.stdin.readline()
    chess.append(t)
result1 = []
for i in range(n - 7): #검사할 첫 인덱스 행단위 이동(세로이동)
    for j in range(m - 7): #검사할 첫 인덱스 열단위 이동(가로이동)
        w_start = 0
        b_start = 0
        for k in range(i, i + 8): # 8X8의 행단위
            for w in range(j, j + 8): # 8X8의 열단위
                if (k + w) % 2 == 0: #대각선의 인덱스합은 짝수가 되고, 지그재그꼴로 짝홀짝홀나옴! 행렬식 구할때 + 붙는항이 짝, -붙는항이 홀
                    if chess[k][w] != 'W':
                        w_start += 1 #WBWB가야하는데... 짝수 쪽이 W가아니면 W로 시작하는 기준에서 색깔 바꿔야할 판 1추가
                    if chess[k][w] != 'B':
                        b_start += 1 #BWBW가야하는데... 짝수 쪽이 B가 아니면 B로 시작하는 기준에서 색깔 바꿔야할 판 1추가
                else:
                    if chess[k][w] != 'B':
                        w_start += 1 #WBWB가야하는데... 홀수 쪽이 B가 아니면 W로 시작하는 기준에서 색깔 바꿔야할 판 1추가
                    if chess[k][w] != 'W':
                        b_start += 1 #BWBW가야하는데... 홀수 쪽이 W가 아니면 B로 시작하는 기준에서 색깔 바꿔야할 판 1추가
 #아무것도 바꿀 필요가 없는 경우엔... 둘다 32가됨.
 #완벽한 판일 경우, 한쪽이 64, 한쪽이 0이됨.
 #제일 최악의 판일 경우, 한쪽이 32 한쪽이 32가됨 
 #https://god-gil.tistory.com/m/62 이분의 풀이를 참고하였습니다.
 #https://www.acmicpc.net/problem/1018                    


        result1.append(w_start)
        result1.append(b_start)

print(min(result1))

'''import sys
n, m = map(int, sys.stdin.readline().split())
chess = []
for i in range(n):
    t = sys.stdin.readline()
    chess.append(t)
result = []
for i in range(n - 7):
    for j in range(m - 7):
        cnt = 0
        costco = 0
        for k in range(i, i + 8): 
            costco += 1
            det_i = i % 2
            det_j = j % 2
            for w in range(j, j + 8):
                if costco % 2 != 0:
                    if (chess[i][j] == chess[k][w]) and (det_j != (w % 2)):
                        cnt += 1
                    elif (det_j == (w % 2)) and (chess[i][j] != chess[k][w]):
                        cnt += 1
                    else:
                        pass
                else:
                    if (det_j == (w % 2)) and (chess[i][j] == chess[k][w]):
                        cnt += 1
                    elif (det_j != (w % 2)) and (chess[i][j] != chess[k][w]):
                        cnt += 1
                    else:
                        pass    
        result.append(cnt)
print(min(result))'''

#이건 내가 생각했던 코드지만, 반례가 존재함...
#시작점을 고정시켜버리니 반례가 존재
